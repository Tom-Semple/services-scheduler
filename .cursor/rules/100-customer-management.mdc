---
description: Customer and property management patterns with MCP integration
globs: "src/{components,pages,hooks}/**/*{customer,property}*.{ts,tsx}"
---

# Customer Management Rules with MCP

## Database Schema via MCP
Use Supabase MCP server's list_tables and generate_typescript_types tools to understand current customer and property table structures. Apply schema changes using apply_migration tool for adding new fields or constraints.

## Customer Data Operations
Use MCP server's execute_sql tool for all customer CRUD operations. Keep customer records minimal with essential fields: id, name, phone, email, notes, created_at. Link customers to properties via customer_id foreign key relationship.

## Property Data Management
Properties must have name, address, customer_id as required fields managed via MCP server database operations. Include terrain_type for job planning and access_instructions for contractor guidance like gate codes or special entry requirements.

## Data Fetching Patterns
Create custom hooks that use MCP server's execute_sql tool for customer and property queries. Implement proper loading states during MCP operations. Handle MCP server errors gracefully with user-friendly messages.

## Search and Filtering
Implement customer search by name and phone number using MCP server queries with SQL LIKE operations. Enable property search by address and customer name through database-level filtering. Use simple text-based search without complex filtering UI. Provide autocomplete using MCP server queries.

## Type Safety with MCP
Always use TypeScript types generated by the MCP server's generate_typescript_types tool. Regenerate types after schema changes to maintain accuracy. Use these types for all customer and property data interfaces.

## Form Validation Rules
Use react-hook-form with zod schemas that match MCP-generated types for validation. Require name and phone for customers. Validate email format when provided. Ensure property has name, address, and customer association before submitting to database via MCP server.
